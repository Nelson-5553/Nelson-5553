---
import { ClientRouter } from 'astro:transitions';
interface Props {
   title: string;
   class: string;
}
const { title } = Astro.props;
---
<!doctype html>
<html lang="en">
   <head>
     <meta charset="UTF-8" />
     <meta name="description" content="Astro description" />
     <meta name="viewport" content="width=device-width" />
     <link class="rounded-full" rel="icon" href="/img/N5553.png" />
     <meta name="generator" />
     <title>{title}</title>
     <ClientRouter />
   </head>
   <body class="bg-white dark:bg-black dark:bg-[radial-gradient(#ffffff33_1px,#00091d_1px)] dark:bg-[size:20px_20px] bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] bg-[size:16px_16px] bg-fixed min-h-screen transition-colors">
    <div class="absolute inset-0 -z-10 h-full w-full"></div>
    <main class="relative min-h-screen">
      <div class="absolute top-4 right-4">
        <button
          id="theme-toggle"
          class="px-4 py-2 rounded bg-gray-200 dark:bg-gray-800 text-gray-800 dark:text-gray-200"
        >
          Cambiar modo
        </button>
      </div>
      <div class="flex flex-col justify-center items-center min-h-screen">
        <!-- contenido -->
        <slot />
      </div>
    </main>
  </body>
  
</html>

<script>
  const toggleButton = document.getElementById('theme-toggle');
  const rootElement = document.documentElement;

  // Carga el tema desde localStorage
  const currentTheme = localStorage.getItem('theme');
  if (currentTheme === 'dark') {
    rootElement.classList.add('dark');
  }

  // Alternar entre claro/oscuro
  toggleButton.addEventListener('click', () => {
    if (rootElement.classList.contains('dark')) {
      rootElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
    } else {
      rootElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
    }
  });
</script>

