---
import ClientRouter from 'astro/components/ClientRouter.astro';
interface Props {
  title: string;
  class: string;
  lang: string;
}
const { title, lang = "es" } = Astro.props;
import NavEs from '@components/es/nav.astro';
import NavEn from '@components/en/nav.astro';
const Nav = lang === "en" ? NavEn : NavEs;
---

<!doctype html>
<html lang="en" class="overflow-x-hidden">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link class="rounded-full" rel="icon" href="/img/N5553.png" />
    <meta name="generator" />
    <title>{title}</title>
    <!-- AOSJS -->
    <script src="../js/aos.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet" />

    <!-- Incluir el script del cambio de tema -->
    <ClientRouter />
    <script is:inline>
      function applyTheme() {
  const rootElement = document.documentElement;
  const currentTheme = localStorage.getItem('theme');

  if (!currentTheme) {
    // Default to dark mode if no theme is set
    rootElement.classList.add('dark');
    localStorage.setItem('theme', 'dark');
  } else if (currentTheme === 'dark') {
    rootElement.classList.add('dark');
  } else {
    rootElement.classList.remove('dark');
  }

  updateThemeIcon();
}

function updateThemeIcon() {
  const toggleButton = document.getElementById('theme-toggle');
  const isDarkMode = document.documentElement.classList.contains('dark');

  if (toggleButton) {
    // Show/hide icons based on the theme
    const sunIcon = toggleButton.querySelector('svg:nth-child(1)');
    const moonIcon = toggleButton.querySelector('svg:nth-child(2)');

    if (isDarkMode) {
      sunIcon.style.display = 'block';
      moonIcon.style.display = 'none';
    } else {
      sunIcon.style.display = 'none';
      moonIcon.style.display = 'block';
    }
  }
}

function setupThemeToggle() {
  const toggleButton = document.getElementById('theme-toggle');
  const rootElement = document.documentElement;

  if (toggleButton) {
    toggleButton.addEventListener('click', () => {
      if (rootElement.classList.contains('dark')) {
        rootElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      } else {
        rootElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      }
      updateThemeIcon();
    });
  }
}

// Initial theme setup
applyTheme();
setupThemeToggle();

// Handle theme persistence during Astro view transitions
document.addEventListener('astro:page-load', () => {
  applyTheme();
  setupThemeToggle();
});
    </script>
  </head>
  <!-- <div class="absolute top-0 z-[-2] h-screen w-screen bg-white bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]"></div> -->
  <body class="bg-white dark:bg-neutral-950 h-screen w-screen bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))] bg-fixed min-h-screen transition-colors">
    <div class="absolute inset-0 -z-10 h-full w-full"></div>
    <main class="relative flex justify-center min-h-screen px-16">
      <div class="absolute top-4 right-8">
        <!-- Puedes agregar botones o configuraciones aquÃ­ -->
      </div>
      <div class="flex flex-col justify-start items-start mt-32 min-h-screen max-w-7xl prose dark:prose-invert">
          <div>
            <Nav lang={lang} />
            <slot />
          </div>
        </div>
    </main>
</body>

</html>
